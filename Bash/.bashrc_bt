#!/usr/bin/env bash

#===================================================================
#===================================================================
# GENERAL
#===================================================================
alias lt='ls -rlth --color=auto'
alias ls='ls --color=auto'

LS_COLORS='di=1:fi=0:ln=31:pi=5:so=5:bd=5:cd=5:or=31:mi=0:ex=35:*.rpm=90:*.png=35:*.jpg=35:*.jpeg=35:*.sh=92:*.log=96:*.ipynb=93:*.py=93:*.tar.gz=33:*.tar.bz2=33:*.zip=33:*.gz=33:*.xls=32:*.ods=32:*.xlsx=32:*.doc=34:*.docx=34:*.odt=34:*.pdf=31:*.fds=94:*.sim=94:*.csv=36:*.dat=36:*.mo=33:*.java=33:*.fmu=33:*.stl=95:*.stp=95:*.igs=95:*.iges=95:*.step=95'

export $LS_COLORS

set -o vi
export EDITOR="/share/Tools/Editing/NeoVim/nvim.appimage"

alias jn="jupyter notebook"


###===================================================================
### Modules
###===================================================================
###===================================================================
module load divs/0.2
module load Aliases/StarCCM+
#module load python/anaconda3/4.x
#module load python_loc/3.6.0_anac4.3.1
module load python_loc/3.6.5_miniC3
module load FDS/6.5.3
module load VisIt/2.10.3
module load ParaView/5.2.0
export OMP_NUM_THREADS=1


#===================================================================
# Shell / Prompt
#===================================================================
source ~/.git-prompt.sh
case $HOST in
    "wolf" )
        PS1='\[\033[01;32m\]\h\[\033[00m\]$(__git_ps1 " (%s)"): \[\033[01;36m\]\w\[\033[00m\]\n\$ '
        ;;
    "mesh01" )
        PS1='\[\033[01;33m\]\h\[\033[00m\]$(__git_ps1 " (%s)"): \[\033[01;36m\]\w\[\033[00m\]\n\$ '
        ;;
    "master" )
        PS1='\[\033[01;35m\]\h\[\033[00m\]$(__git_ps1 " (%s)"): \[\033[01;36m\]\w\[\033[00m\]\n\$ '
        ;;
    *)
        PS1='\[\033[01;36m\]\h\[\033[00m\]$(__git_ps1 " (%s)"): \[\033[01;36m\]\w\[\033[00m\]\n\$ '
        ;;
esac


printf "\e[?2004l"


#=============================================================================================================================================
source ~/.fzf_custom.sh 

#=============================================================================================================================================
##export MODELICAPATH=/share/Tools/THERMO/MODELICA/Libraries/modelica-buildings_LBL:/share/Tools/THERMO/MODELICA/Libraries/modelica-buildings_LBL/Buildings:/share/software/Optimization/JModelica/2.1b1/ThirdParty/MSL/:/share/Tools/THERMO/MODELICA/Libraries/AixLib_RWTH/AixLib/
alias c1v="cd /WORK1/fbraenns/ && /share/Tools/Editing/NeoVim/nvim.appimage +'VimFilerBufferDir -status -sort-type=Time'"
alias c2v="cd /WORK2/fbraenns/ && /share/Tools/Editing/NeoVim/nvim.appimage +'VimFilerBufferDir -status -sort-type=Time'"
alias c3v="cd /WORK3/fbraenns/ && /share/Tools/Editing/NeoVim/nvim.appimage +'VimFilerBufferDir -status -sort-type=Time'"
alias c4v="cd /data/work/fbraenns/ && /share/Tools/Editing/NeoVim/nvim.appimage +'VimFilerBufferDir -status -sort-type=Time'"
alias c5v="cd /share/Tools/ && /share/Tools/Editing/NeoVim/nvim.appimage +'VimFilerBufferDir -status -sort-type=Time'"
alias c6v="cd /share/software/ && /share/Tools/Editing/NeoVim/nvim.appimage +'VimFilerBufferDir -status -sort-type=Time'"
#alias viv="/share/Tools/Editing/NeoVim/nvim.appimage +'VimFiler -sort-type=Time -status'"
alias viv="/share/Tools/Editing/NeoVim/nvim.appimage +'Defx -auto-cd'"
alias cpwd="pwd | tr -d '\n' | pbcopy && echo 'pwd copied to clipboard'"
alias pw="pwd | xclip -selection 'clipboard' "
alias vi="nv"
alias vim="vim -u /home/fbraenns/.vimrc_y"


#=============================================================================================================================================
# tm - create new tmux session, or switch to existing one. Works from within tmux too. (@bag-man)
# `tm` will allow you to select your tmux session via fzf.
# `tm irc` will attach to the irc session (if it exists), else it will create it.
tmm() {
  [[ -n "$TMUX" ]] && change="switch-client" || change="attach-session"
  if [ $1 ]; then
    tmux $change -t "$1" 2>/dev/null || (tmux new-session -d -s $1 && tmux $change -t "$1"); return
  fi
  session=$(tmux list-sessions -F "#{session_name}" 2>/dev/null | fzf --exit-0) &&  tmux $change -t "$session" || echo "No sessions found."
}

# added by Miniconda3 installer
#export PATH="/share/Tools/Python/Distributions/MiniConda3_latest_180813/bin:$PATH"
